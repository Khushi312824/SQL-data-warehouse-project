
CREATE OR ALTER PROCEDURE silver.load_silver AS
BEGIN
    DECLARE @start_time DATETIME,@end_time DATETIME,@batch_start_time DATETIME,@batch_end_time DATETIME;
	BEGIN TRY
		SET @batch_start_time=GETDATE();
		PRINT '======================================';
		PRINT'LOADING SILVER LAYER';
		PRINT '======================================';

		PRINT '---------------------------------------';
		PRINT ' LOADING CRM TABLES';
		PRINT '---------------------------------------';
		--LOADING silver.crm_cust_info
		SET @start_time=GETDATE();
	

		--CUSTOMER TABLE
		print '>> truncating the table: silver.crm_cust_info';
		TRUNCATE TABLE silver.crm_cust_info;
		print '>> Inserting DATA into: silver.crm_cust_info';

		INSERT INTO silver.crm_cust_info(
			cst_id,
			cst_key,
			cst_firstname,
			cst_lastname,
			cst_marital_status,
			cst_gndr,
			cst_create_date)
		SELECT 
		cst_id,
		cst_key,

		TRIM(cst_firstname) AS cst_firstname,
		TRIM(cst_lastname) AS cst_lastname,
		CASE WHEN UPPER(TRIM(cst_material_status))='S'  THEN 'SINGLE'
			 WHEN UPPER(TRIM(cst_material_status))='M' THEN 'MARRIED'
			 ELSE 'n/a'
		END  as cst_marital_status,

		CASE WHEN UPPER(TRIM(cst_gndr))='F'  THEN 'FEMALE'
			 WHEN UPPER(TRIM(cst_gndr))='M' THEN 'MALE'
			 ELSE 'n/a'
		END as cst_gndr,

		cst_create_date
		FROM(

			SELECT 
			*,
			ROW_NUMBER() OVER (PARTITION BY cst_id ORDER BY cst_create_date DESC) as flag_last
			FROM bronze.crm_cust_info
		)t 
		WHERE flag_last =1;
		SET @end_time=GETDATE();
		PRINT '>> LOAD DURATION:' + CAST( DATEDIFF(SECOND,@start_time,@end_time) AS NVARCHAR)+'SECONDS';
		PRINT '>>-------------';
		--rank on the basis of create date and only pick the highest one


		--SALES TABLE
		SET @start_time=GETDATE();

		PRINT '>> TRUNCATING TABLE :silver.crm_sales_details';
		TRUNCATE TABLE silver.crm_sales_details;
		PRINT '>> INSERTING DATA INTO: silver.crm_sales_details';
		INSERT INTO silver.crm_sales_details (
				sls_ord_num ,
				sls_prd_key,
				sls_cust_id ,
				sls_order_dt ,
				sls_ship_dt ,
				sls_due_dt ,
				sls_sales ,
				sls_quantity ,
				sls_price 
		)
		SELECT 
			sls_ord_num,
			sls_prd_key,
			sls_cust_id,

			CASE WHEN sls_order_dt =0 OR  LEN(sls_order_dt)!=8 THEN NULL
				 ELSE CAST(CAST(sls_order_dt AS VARCHAR) AS DATE)--INT CANNOT BE CONVERTED TO DATE DIRECTLY THEREFORE WE NEED TO CONVERT IT TO A VARCHAR FIRST THEN DATE
			END AS sls_order_dt,
			CASE WHEN sls_ship_dt =0 OR  LEN(sls_ship_dt)!=8 THEN NULL
				 ELSE CAST(CAST(sls_ship_dt AS VARCHAR) AS DATE)--INT CANNOT BE CONVERTED TO DATE DIRECTLY THEREFORE WE NEED TO CONVERT IT TO A VARCHAR FIRST THEN DATE
			END AS sls_ship_dt,
			CASE WHEN sls_due_dt =0 OR  LEN(sls_due_dt)!=8 THEN NULL
				 ELSE CAST(CAST(sls_due_dt AS VARCHAR) AS DATE)--INT CANNOT BE CONVERTED TO DATE DIRECTLY THEREFORE WE NEED TO CONVERT IT TO A VARCHAR FIRST THEN DATE
			END AS sls_due_dt,



			CASE WHEN sls_sales IS NULL OR sls_sales <=0 OR sls_sales != sls_quantity*ABS(sls_price)
				THEN sls_quantity*ABS(sls_price)
				ELSE sls_sales
			END AS sls_sales,

			sls_quantity,
			CASE WHEN sls_price IS NULL OR  sls_price <=0
				THEN sls_sales/NULLIF(sls_quantity,0)
				ELSE sls_price 
			END AS sls_price
		FROM bronze.crm_sales_details;
		SET @end_time=GETDATE();
		PRINT '>> LOAD DURATION:'+CAST(DATEDIFF(SECOND,@start_time,@end_time) as NVARCHAR)+'SECONDS';
		PRINT'>.--------------------';

	
		--SILVER.CRM.PRD TABLE
		SET @start_time=GETDATE();
		PRINT '>> TRUNCATING TABLE: silver.crm_prd_info';
		TRUNCATE TABLE silver.crm_prd_info;
		PRINT '>> INSERTING DATA INTO : silver.crm_prd_info';

		INSERT INTO silver.crm_prd_info(
			prd_id,
			cat_id,

			prd_key,
			prd_nm,
			prd_cost,
			prd_line,
			prd_start_dt,
			prd_end_dt
		)

		SELECT 
			prd_id,
	
			REPLACE(SUBSTRING(prd_key,1,5),'-','_') AS cat_id,
			SUBSTRING(prd_key,7,LEN(prd_key)) AS prd_key,
	
			prd_nm,
			--handling missing inf0
			ISNULL(prd_cost,0) AS prd_cost, 
	
			--data normalization
			CASE  UPPER(TRIM(prd_line)) 
				  WHEN 'M' THEN 'MOUNTAIN'
				  WHEN 'R' THEN 'ROAD'
				  WHEN 'S' THEN 'OTHER SALES'
				  WHEN 'T' THEN 'TOURING'
				  ELSE 'n/a'    
			END AS prd_line,
			CAST(prd_start_dt AS DATE) AS prd_start_dt,
			CAST(
				LEAD(prd_start_dt) OVER (PARTITION BY prd_key ORDER BY prd_start_dt)-1 AS DATE
			)AS prd_end_dt
		FROM bronze.crm_prd_info
		SET @end_time=GETDATE();
		PRINT '>> LOAD DURATION:'+CAST(DATEDIFF(SECOND,@start_time,@end_time) as NVARCHAR)+'SECOND';
		PRINT'>>----------';

	

		--LOADING ERP TABELS
		--CATEGORY TABLE
		SET @start_time=GETDATE();
		PRINT '>> Truncating Table:silver.erp_px_cat_g1v2';
		TRUNCATE TABLE silver.erp_px_cat_g1v2;
		print '>> INSERTING DATA INTO:silver.erp_px_cat_g1v2';
		INSERT INTO silver.erp_px_cat_g1v2(
		id,
		cat,subcat,
		maintenance)
		SELECT 
		id,
		cat,
		subcat,
		maintenance
		FROM bronze.erp_px_cat_g1v2
		SET @end_time=GETDATE();
		PRINT '>> LOAD DURATION:'+CAST(DATEDIFF(SECOND,@start_time,@end_time) as NVARCHAR)+'SECOND';
		PRINT'>>----------';
		PRINT '>> LOADING ERP TABLES';
		PRINT '---------------------------';




		--ERP CUSTOMER TABLE
		SET @start_time =GETDATE();

		PRINT '>> TRUNCATING TABLE : silver.erp_cust_az12';
		TRUNCATE TABLE silver.erp_cust_az12;
		PRINT '>> INSERTING DATA INTO silver.erp_cust_az12';

		INSERT INTO silver.erp_cust_az12(cid,bdate,gen)

		SELECT 
		--handling invalid values
		CASE WHEN cid LIKE 'NAS%' THEN SUBSTRING(cid,4,LEN(cid))
		ELSE cid
		END  AS cid,
		CASE WHEN bdate > GETDATE() THEN NULL
			 ELSE bdate
		END AS bdate,
		CASE WHEN UPPER(TRIM(gen)) IN ('F','FEMALE') THEN 'FEMALE'
			 WHEN UPPER(TRIM(gen)) IN ('M','MALE') THEN 'MALE'
			 ELSE 'n/a'--handling missing values
		END AS gen

		FROM bronze.erp_cust_az12
		SET @end_time=GETDATE();
		PRINT '>> LOAD DURATION:'+CAST(DATEDIFF(SECOND,@start_time,@end_time) as NVARCHAR)+'SECOND';
		PRINT'>>----------';

		PRINT '>> LOADING ERP TABLES';
		PRINT '---------------------------';

		--erp table 3
		SET @start_time=GETDATE();
		PRINT'>>TRUNCATING TABLE : silver.erp_loc_a101';
		TRUNCATE TABLE silver.erp_loc_a101;
		PRINT '>> INSERTING DATA INTO : silver.erp_loc_a101';
		INSERT INTO silver.erp_loc_a101(
		cid,cntry)
		SELECT
		REPLACE(cid,'-','') cid,
		CASE WHEN TRIM(cntry)='DE' THEN 'GERMANY'
			 WHEN TRIM(cntry) IN ('US','USA') THEN 'United States'
			 WHEN TRIM(cntry) = '' OR cntry IS NULL THEN 'n/a'
			 ELSE TRIM(cntry)
		END AS cntry
		FROM bronze.erp_loc_a101
		SET @end_time=GETDATE();
		PRINT '>> LOAD DURATION:'+CAST(DATEDIFF(SECOND,@start_time,@end_time) as NVARCHAR)+'SECOND';
		PRINT'>>----------';
		PRINT '>> LOADING ERP TABLES';
		PRINT '---------------------------';
		SET @batch_end_time=GETDATE();
		PRINT '>>======================='
		PRINT 'LOADING SILVER LAYER IS COMPLETED';
		PRINT 'TOTAL LOAD DURATION:'+CAST(DATEDIFF(SECOND,@batch_start_time,@batch_end_time) AS NVARCHAR)+'SECONDS';
		PRINT '=============================='

		END TRY
		BEGIN CATCH
			PRINT '==========================='
			PRINT 'ERROR OCCURED DURING LOADING BRONE LAYER'
			PRINT 'ERROR MESSAGE' + ERROR_MESSAGE();
			PRINT 'ERROR MESSAGE' + CAST(ERROR_NUMBER() AS NVARCHAR);
			PRINT 'ERROR MESSAGE' + CAST(ERROR_STATE() AS NVARCHAR);
			PRINT '============================'
		END CATCH
	END

